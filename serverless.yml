service: ar-event-streaming-demo

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  runtime: nodejs8.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - kinesis:PutRecord
      Resource:
        Fn::GetAtt:
          - Stream
          - Arn
  
functions:
  createTransaction:
    handler: handler.createTransaction
    events:
      - http:
          path: transaction/
          method: post
          cors: true
    memorySize: 128
    environment:
      STREAM_NAME:
        Ref: Stream
  createMailbox:
    handler: handler.createMailbox
    events:
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt:
              - Stream
              - Arn
          batchSize: 100
          startingPosition: TRIM_HORIZON
    memorySize: 128
    environment:
      STREAM_NAME:
        Ref: Stream
  updateTransaction:
    handler: handler.updateTransaction
    events:
      - stream:
          type: kinesis
          arn:
            Fn::GetAtt:
              - Stream
              - Arn
          batchSize: 100
          startingPosition: TRIM_HORIZON
    memorySize: 128
    environment:
      STREAM_NAME:
        Ref: Stream
    
plugins:
  - serverless-offline

package:
  exclude:
    - node_modules/**
    - '!node_modules/highland/**'
    - '!node_modules/util-deprecate/**'
    - '!node_modules/uuid/**'

resources:
  Resources:
    Stream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:provider.stage}-${self:service}-stream
        RetentionPeriodHours: 24
        ShardCount: 1
  Outputs:
    streamName:
      Value: 
        Ref: Stream
    streamArn:
      Value: 
        Fn::GetAtt:
          - Stream
          - Arn